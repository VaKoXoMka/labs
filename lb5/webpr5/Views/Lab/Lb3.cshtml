<head>
    <style>
        body {
            padding-top: 60px;
        }
    </style>
</head>
<div>
    <div style="">
        <div class="title">
            Лабораторна робота 3
        </div>
        <div class="task">
            <b>Завдання:</b>
            <span>
                Незабаром на телеекрани однієї країни вийде нове шоу «Двоє у лабіринті». Його сюжет полягатиме в тому, що двох учасників буде поміщено в лабіринт. Їхньою метою є пошук виходу з даного лабіринту. Перший, хто знайде вихід, матиме великий грошовий приз.
                Однак, перш ніж шоу вийде на екрани, лабіринти мають бути сертифіковані Державним Бюро Сертифікації Лабіринтів. У своїй роботі бюро використовує спеціальні машини, які називають обхідниками лабіринтів.
                Оскільки через специфіку роботи цих машин для кожного лабіринту доводиться будувати нового обхідника, Вам доручено провести комп'ютерне моделювання обходу лабіринту.
                Лабіринт складається з n кімнат, з'єднаних коридорами m. На кінцях коридору є дві двері, одна з яких відчиняється тільки з коридору, у другій тільки з кімнати, з якої коридор виходить, таким чином рух коридором дозволено тільки в один бік. Крім цього, кожен з коридорів пофарбований в один з квітів (це зроблено для того, щоб трохи полегшити учасникам перебування виходу з лабіринту). Колір коридору вказаний на відповідних дверях в кімнаті, з якої він виходить. При цьому з кімнати можуть виходити декілька коридорів одного кольору.
                Обхідник лабіринтів працює за програмою, що складається з L інструкцій. Кожна інструкція – це номер кольору (число від 1 до k). Обхід лабіринту починається в кімнаті номер s і відбувається наступним чином: обхідник почергово зчитує інструкції та на кожному кроці вибирає один з коридорів, пофарбованих у колір, зазначений у цій інструкції. Якщо такого коридору немає, то обхідник «зависає».
                Так як на кожному кроці обхідник може бути не один варіант вибору коридору, то кімната, в якій він опиниться після виконання програми може визначатися неоднозначно.
                Ваше завдання полягає в тому, щоб за описом лабіринту та програмою для обхідника визначити, в яких кімнатах обхідник може опинитися після виконання відповідної програми.
                Вхідні дані
                Перший рядок вхідного файлу INPUT.TXT містить три цілих числа: n, m, k (1 ≤ n, k ≤ 1000, 0 ≤ m ≤ 10000). Далі йдуть m рядків, що описують коридори. Опис кожного коридору складається з трьох цілих чисел: u, v, c (1 ≤ u, v ≤ n, 1 ≤ c ≤ k). Їх значення такі: u – номер кімнати, з якої виходить коридор, v – номер кімнати, до якої веде коридор, c колір цього коридору. Коридор може вести з кімнати в саму себе, між двома кімнатами може існувати кілька коридорів (більше того, кілька коридорів одного кольору).
                (m+2) рядок вхідного файлу містить ціле число L (1 ≤ L ≤ 1000). (m+3)-ий рядок містить L цілих чисел від 1 до k – програми для обхідника лабіринту.
                Останній рядок вхідного файлу містить ціле число s (1 ≤ s ≤ n).
                Вихідні дані
                У вихідний файл OUTPUT.TXT слід вивести слово Hangs у випадку, якщо обхідник «зависає» незалежно від того, які коридори він вибирає за наявності кількох коридорів одного кольору.

            </span>
        </div>
        <form method="POST">
            <div class="path">
                <div class="caption">
                    <b>Надайте шлях до файлу INPUT.txt:</b>
                </div>
                <div class="path_filling">
                    <input type="text" placeholder="..." name="input_file">
                </div>
            </div>
            <div class="path">
                <div class="caption">
                    <b>Надайте шлях до файлу OUTPUT.txt:</b>
                </div>
                <div class="path_filling">
                    <input type="text" placeholder="..." name="output_file">
                </div>
            </div>
            <input type='submit' value='Run' />
        </form>
    </div>
</div>
